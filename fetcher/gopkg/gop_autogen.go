// Code generated by gop (Go+); DO NOT EDIT.

package gopkg

import (
	"github.com/goplus/hdq"
	"github.com/goplus/hdq/fetcher"
	"github.com/qiniu/x/errors"
	"strconv"
	"strings"
)

const GopPackage = "github.com/goplus/hdq"
const _ = true

type Result struct {
	Name       string `json:"name"`
	ImportedBy int    `json:"importedBy"`
}
//line fetcher/gopkg/gopkg_imps.gop:15:1
// New creates a new Result from a html document.
func New(input interface{}, doc hdq.NodeSet) Result {
//line fetcher/gopkg/gopkg_imps.gop:17:1
	const importedByPrefix = "Imported By:"
//line fetcher/gopkg/gopkg_imps.gop:18:1
	name := input.(string)
//line fetcher/gopkg/gopkg_imps.gop:19:1
	a := doc.Any().A().Attribute__1("aria-label", func(v string) bool {
//line fetcher/gopkg/gopkg_imps.gop:19:1
		return strings.HasPrefix(v, importedByPrefix)
	}).One()
//line fetcher/gopkg/gopkg_imps.gop:20:1
	label := func() (_gop_ret string) {
//line fetcher/gopkg/gopkg_imps.gop:20:1
		var _gop_err error
//line fetcher/gopkg/gopkg_imps.gop:20:1
		_gop_ret, _gop_err = a.Attr__0("aria-label")
//line fetcher/gopkg/gopkg_imps.gop:20:1
		if _gop_err != nil {
//line fetcher/gopkg/gopkg_imps.gop:20:1
			_gop_err = errors.NewFrame(_gop_err, "a.attr(\"aria-label\")", "fetcher/gopkg/gopkg_imps.gop", 20, "gopkg.New")
//line fetcher/gopkg/gopkg_imps.gop:20:1
			panic(_gop_err)
		}
//line fetcher/gopkg/gopkg_imps.gop:20:1
		return
	}()
//line fetcher/gopkg/gopkg_imps.gop:21:1
	labelVal := strings.TrimSpace(label[len(importedByPrefix):])
//line fetcher/gopkg/gopkg_imps.gop:22:1
	importedBy := func() (_gop_ret int) {
//line fetcher/gopkg/gopkg_imps.gop:22:1
		var _gop_err error
//line fetcher/gopkg/gopkg_imps.gop:22:1
		_gop_ret, _gop_err = strconv.Atoi(strings.ReplaceAll(labelVal, ",", ""))
//line fetcher/gopkg/gopkg_imps.gop:22:1
		if _gop_err != nil {
//line fetcher/gopkg/gopkg_imps.gop:22:1
			_gop_err = errors.NewFrame(_gop_err, "strings.replaceAll(labelVal, \",\", \"\").int", "fetcher/gopkg/gopkg_imps.gop", 22, "gopkg.New")
//line fetcher/gopkg/gopkg_imps.gop:22:1
			panic(_gop_err)
		}
//line fetcher/gopkg/gopkg_imps.gop:22:1
		return
	}()
//line fetcher/gopkg/gopkg_imps.gop:23:1
	return Result{name, importedBy}
}
//line fetcher/gopkg/gopkg_imps.gop:26:1
// URL returns the input URL for the given name.
func URL(name interface{}) string {
//line fetcher/gopkg/gopkg_imps.gop:28:1
	return "https://pkg.go.dev/" + name.(string)
}
//line fetcher/gopkg/gopkg_imps.gop:31:1
func init() {
//line fetcher/gopkg/gopkg_imps.gop:32:1
	fetcher.Register("gopkg", New, URL)
}
