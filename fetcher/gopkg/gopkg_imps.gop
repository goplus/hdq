/*
Copyright 2024 The GoPlus Authors (goplus.org)
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package gopkg

import (
	"strings"

	"github.com/goplus/hdq"
	"github.com/goplus/hdq/fetcher"
)

type Result struct {
	Path       string `json:"path"`
	ImportedBy int    `json:"importedBy"`
}

// New creates a new Result from a html document.
func New(input any, doc hdq.NodeSet) Result {
	const importedByPrefix = "Imported By:"
	path := input.(string)
	a := doc.any.a.attribute("aria-label", v => strings.hasPrefix(v, importedByPrefix)).one
	if !a.ok {
		return {path, 0}
	}
	label := a.attr("aria-label")!
	labelVal := strings.trimSpace(label[len(importedByPrefix):])
	importedBy := strings.replaceAll(labelVal, ",", "").int!
	return {path, importedBy}
}

// URL returns the input URL for the given input.
func URL(input any) string {
	return "https://pkg.go.dev/" + input.(string)
}

func init() {
	fetcher.Register("gopkg", New, URL)
}
