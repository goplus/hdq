/*
Copyright 2024 The GoPlus Authors (goplus.org)
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package torch

import (
	"strings"

	"github.com/goplus/hdq"
	"github.com/goplus/hdq/fetcher"
)

// -----------------------------------------------------------------------------

const (
	spaces = " \t\r\nÂ¶"
)

type Result struct {
	Name string `json:"name"`
	Doc  string `json:"doc"`
	Sig  string `json:"sig"`
	URL  string `json:"url"`
}

// New creates a new Result from a html document.
func New(url string, doc hdq.NodeSet) Result {
	fn := doc.any.dl.class("py function")
	decl := fn.firstElementChild.dt.text!
	pos := strings.indexByte(decl, '(')
	if pos > 0 {
		name := strings.trimPrefix(decl[:pos], "torch.")
		sig := decl[pos:]
		return {strings.trimSpace(name), "", strings.trimRight(sig, spaces), url}
	}
	return {"", "", "<NULL>", url}
}

// URL returns the input URL for the given name.
func URL(name string) string {
	return "https://pytorch.org/docs/stable/generated/torch." + name + ".html"
}

func init() {
	fetcher.Register("torch", New, URL)
}

// -----------------------------------------------------------------------------
